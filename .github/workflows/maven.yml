# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    container:
      image: docker:20.10.9
      options: --privileged

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # Docker build and push
    - name: Check Docker version
      run: docker version
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
    - name: Build and push Docker image
      env:
        IMAGE_NAME: ghcr.io/createandlearn/auth-service/auth
      run: |
        docker build . -f Dockerfile --tag $IMAGE_NAME
        docker push $IMAGE_NAME